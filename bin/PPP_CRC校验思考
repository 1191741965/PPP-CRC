CRC校验步骤：
			1.通过Jframe获得字符串
					1.1:获得输入框中 PPP的FCS（二进制）的字符串
					1.2:获得输入框中CRC校验码（二进制）的字符串
			2.求取获得的字符串的长度
					2.1:获得FCS字符串的长度
					2.2:获得CRC字符串的长度
					2.3:获得最终FCS字符串的长度(FCS+CRC-1)
			3.字符串转化为数组
					3.1:FCS字符串转换为数组存储
						3.1.1:将字符串转换为int类型的数据pppInt
						3.1.2:对pppInt % 10,倒置为数组赋值，开始位置为：pppLength-1;
						3.1.3:较CRC长度，为数组后几位置零
					3.1:CRC字符串转换为数组存储
						3.1.1:将字符串转换为int类型的数据crcInt
						3.1.2:对crcInt % 10,倒置为数组赋值，开始位置为：crcLength-1;
			4.将两个数组以及最终FCS长度和CRC长度传入校验函数
				4.1开始比较(两个for循环)
					i = flag;
					int k = 0;
					Arr[0] = -1;
					两个数组的每一位数字进行比较是否相等
						相等，则把FCS数组对应的位置的数据置为0	i++;j++;
						不相等，则把FCS数组对应的位置的数据置为1，同时用另一个记录数组记录数据的下标 i++;j++
						直到一直比到退出第二次循环。
					对记录数组下标为0的数据比对
						为-1则进行的是完全比对，将flag = flag + j；
						不为-1，则将flag = Arr[0]
					判断是否符合条件(FCS最终长度-flag) < CRC长度
						符合，则退出循环
						否则，继续执行循环
				4.2字符拼接
					一个for循环,起始位置为FCS最终长度-CRC长度+1    	结束位置：FCS的最终长度
					用一个String类型来的变量crcCode进行字符拼接
				4.3返回	crcCode
			
	//参考文章：https://blog.csdn.net/ncdawen/article/details/633014

